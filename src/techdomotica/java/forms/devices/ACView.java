package techdomotica.java.forms.devices;

import java.awt.Image;
import javax.swing.ImageIcon;
import techdomotica.java.forms.screens.progressDialog;
import techdomotica.objs.Ambiente;

public class ACView extends javax.swing.JFrame {
    
    private Ambiente ambiente;
  
    public ACView(Ambiente amb) {
        ambiente = amb;
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/resources/media/L4.png")).getImage());
        checkAC();
        
        if(ambiente.getACondicionado(0) != null) labelDeviceName.setText("Estado de " + ambiente.getACondicionado(0).getComponenteFullName());
        else labelDeviceName.setText("Dispositivo no registrado");
        if(ambiente.getACondicionado(1) != null) labelDeviceName1.setText("Estado de " + ambiente.getACondicionado(1).getComponenteFullName());
        else labelDeviceName1.setText("Dispositivo no registrado");
    }

    public void checkAC() {
        int aire = 0;
        boolean both = false;
        if(ambiente.getACondicionado(0) != null && ambiente.getACondicionado(1) != null) both = true;
        if(ambiente.getACondicionado(0) != null) {
            aire += (int)ambiente.getACondicionado(0).getTemperatura();
            if(ambiente.getACondicionado(0).getComponenteEncendidoState()) activestate.setSelected(true);
            else inactivestate.setSelected(true);
        }
        else {
            activestate.setEnabled(false);
            inactivestate.setEnabled(false);
        }
        if(ambiente.getACondicionado(1) != null) {
            aire += (int)ambiente.getACondicionado(1).getTemperatura();
            if(ambiente.getACondicionado(1).getComponenteEncendidoState()) activestate1.setSelected(true);
            else inactivestate1.setSelected(true);
        }
        else {
            activestate1.setEnabled(false);
            inactivestate1.setEnabled(false);
        }
        if(both) aire = aire / 2;
        tSala.setText("Temperatura de la sala: " + aire + "°C.");
        switch(aire) {
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
                salaicon.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/resources/media/simulator/tempr/" + aire + ".png")).getImage().getScaledInstance(567, 278, Image.SCALE_SMOOTH)));
                break;
            default:
                salaicon.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/resources/media/simulator/tempr/off.png")).getImage().getScaledInstance(567, 278, Image.SCALE_SMOOTH)));
                break;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnactivedevice1 = new javax.swing.ButtonGroup();
        btnactivedevice2 = new javax.swing.ButtonGroup();
        salaicon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        activestate = new javax.swing.JRadioButton();
        inactivestate = new javax.swing.JRadioButton();
        labelDeviceName = new javax.swing.JLabel();
        tSala = new javax.swing.JLabel();
        labelDeviceName1 = new javax.swing.JLabel();
        activestate1 = new javax.swing.JRadioButton();
        inactivestate1 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estadísticas de los sensores - Tech Domótica");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Aires acondicionados");

        btnactivedevice1.add(activestate);
        activestate.setText("Activo");
        activestate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activestateActionPerformed(evt);
            }
        });

        btnactivedevice1.add(inactivestate);
        inactivestate.setText("Inactivo");
        inactivestate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inactivestateActionPerformed(evt);
            }
        });

        labelDeviceName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDeviceName.setText("Estado de");

        tSala.setText("Temperatura de la sala:");

        labelDeviceName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDeviceName1.setText("Estado de");

        btnactivedevice2.add(activestate1);
        activestate1.setText("Activo");
        activestate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activestate1ActionPerformed(evt);
            }
        });

        btnactivedevice2.add(inactivestate1);
        inactivestate1.setText("Inactivo");
        inactivestate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inactivestate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tSala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(activestate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inactivestate, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(activestate1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                        .addComponent(inactivestate1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelDeviceName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addComponent(salaicon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDeviceName1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activestate)
                    .addComponent(inactivestate)
                    .addComponent(activestate1)
                    .addComponent(inactivestate1))
                .addGap(18, 18, 18)
                .addComponent(tSala)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salaicon, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void activestateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activestateActionPerformed
        progressDialog dialog = new progressDialog(this, true, 3) {
            @Override
            public void progressBarFilled() {
                ambiente.getACondicionado(0).toggleComponenteEncendido(true);
                checkAC();
            }
        };
        dialog.setTitle("Encendiendo sendor de puerta");
        dialog.textVar.setText("Encendiendo el sensor de la puerta. Por favor, espere...");
        dialog.setVisible(true);
    }//GEN-LAST:event_activestateActionPerformed

    private void inactivestateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inactivestateActionPerformed
        progressDialog dialog = new progressDialog(this, true, 3) {
            @Override
            public void progressBarFilled() {
                ambiente.getACondicionado(0).toggleComponenteEncendido(false);
                checkAC();
            }
        };
        dialog.setTitle("Apagando aire acondicionado");
        dialog.textVar.setText("Apagando el aire acondicionado seleccionado. Por favor, espere...");
        dialog.setVisible(true);
    }//GEN-LAST:event_inactivestateActionPerformed

    private void activestate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activestate1ActionPerformed
        // TODO add your handling code here:
        progressDialog dialog = new progressDialog(this, true, 3) {
            @Override
            public void progressBarFilled() {
                ambiente.getACondicionado(1).toggleComponenteEncendido(true);
                checkAC();
            }
        };
        dialog.setTitle("Encendiendo aire acondicionado");
        dialog.textVar.setText("Encendiendo el aire acondicionado seleccionado. Por favor, espere...");
        dialog.setVisible(true);
    }//GEN-LAST:event_activestate1ActionPerformed

    private void inactivestate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inactivestate1ActionPerformed
        // TODO add your handling code here:
        progressDialog dialog = new progressDialog(this, true, 3) {
            @Override
            public void progressBarFilled() {
                ambiente.getACondicionado(1).toggleComponenteEncendido(false);
                checkAC();
            }
        };
        dialog.setTitle("Apagando aire acondicionado");
        dialog.textVar.setText("Apagando el aire acondicionado seleccionado. Por favor, espere...");
        dialog.setVisible(true);
    }//GEN-LAST:event_inactivestate1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ACView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ACView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ACView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ACView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ACView(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton activestate;
    private javax.swing.JRadioButton activestate1;
    private javax.swing.ButtonGroup btnactivedevice1;
    private javax.swing.ButtonGroup btnactivedevice2;
    private javax.swing.JRadioButton inactivestate;
    private javax.swing.JRadioButton inactivestate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelDeviceName;
    private javax.swing.JLabel labelDeviceName1;
    private javax.swing.JLabel salaicon;
    private javax.swing.JLabel tSala;
    // End of variables declaration//GEN-END:variables
}
