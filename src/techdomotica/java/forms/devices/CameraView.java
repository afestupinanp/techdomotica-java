/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techdomotica.java.forms.devices;

import java.awt.Image;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import techdomotica.java.forms.screens.progressDialog;
import techdomotica.objs.Ambiente;
import techdomotica.objs.TimeChecker;

/**
 *
 * @author Andres
 */
public class CameraView extends javax.swing.JFrame {

    /**
     * Creates new form CameraView
     * @param timeThread Hilo de tiempo.
     */

    private Ambiente ambient;
    
    private Thread changeUI;
    
    private boolean stopit = true;
    
    private String cameraPath;
    private int cameraID;
    
    public CameraView(Ambiente ambiente, String campath, boolean ison) {
        initComponents();
        ambient = ambiente;
        
        cameraPath = campath;
        
        cameraID = Character.getNumericValue(campath.charAt(campath.length() - 1)) - 1;

        setIconImage(new ImageIcon(getClass().getResource("/resources/media/L4.png")).getImage());
        setLocationRelativeTo(null);
        
        loadViewIcon(cameraPath, ison);

        changeUI = new Thread(new Runnable() {
            @Override
            public void run() {
                while(stopit) {
                    try {
                        Thread.sleep(1000);
                        SwingUtilities.invokeLater(new Runnable() {
                            @Override
                            public void run() {
                                dateTime.setText(java.time.LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd-MM-YYYY - hh:mm:ss a")));
                            }
                        });
                    } 
                    catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }

                }
            }
        });
        changeUI.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cameraOn = new javax.swing.ButtonGroup();
        dateTime = new javax.swing.JLabel();
        cameraViewNum = new javax.swing.JLabel();
        cameraView = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        camerabtnon = new javax.swing.JRadioButton();
        camerabtnoff = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dateTime.setText("-");
        getContentPane().add(dateTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, 190, 30));

        cameraViewNum.setText("Vista de cámara:");
        getContentPane().add(cameraViewNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 120, 30));
        getContentPane().add(cameraView, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 370));

        jLabel1.setText("Estado:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, 30));

        cameraOn.add(camerabtnon);
        camerabtnon.setSelected(true);
        camerabtnon.setText("Activado");
        camerabtnon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camerabtnonActionPerformed(evt);
            }
        });
        getContentPane().add(camerabtnon, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, -1, 30));

        cameraOn.add(camerabtnoff);
        camerabtnoff.setText("Desactivado");
        camerabtnoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camerabtnoffActionPerformed(evt);
            }
        });
        getContentPane().add(camerabtnoff, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        handleClose();
    }//GEN-LAST:event_formWindowClosing

    private void camerabtnonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camerabtnonActionPerformed
        progressDialog dialogo = new progressDialog(this, true, 10){
            @Override
            public void progressBarFilled() {
                super.progressBarFilled();
                ambient.getCamara(cameraID).toggleComponenteEncendido(true);
                try {
                    Thread.sleep(500);
                    loadViewIcon(cameraPath, true);
                } 
                catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        };
        dialogo.setTitle("Encendiendo cámara");
        dialogo.textVar.setText("Encendiendo la cámara " + ambient.getCamara(cameraID).getComponenteFullName() + ". Por favor espere...");
        dialogo.setVisible(true);
    }//GEN-LAST:event_camerabtnonActionPerformed

    private void camerabtnoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camerabtnoffActionPerformed
        progressDialog dialogo = new progressDialog(this, true, 10){
            @Override
            public void progressBarFilled() {
                super.progressBarFilled();
                ambient.getCamara(cameraID).toggleComponenteEncendido(false);
                try {
                    Thread.sleep(500);
                    loadViewIcon(cameraPath, false);
                } 
                catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        };
        dialogo.setTitle("Apagando cámara");
        dialogo.textVar.setText("Apagando la cámara " + ambient.getCamara(cameraID).getComponenteFullName() + ". Por favor espere...");
        dialogo.setVisible(true);
    }//GEN-LAST:event_camerabtnoffActionPerformed

    public void loadViewIcon(String campath, boolean ison) {
        if(ison) {
            cameraView.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/resources/media/simulator/" + campath + ".png")).getImage().getScaledInstance(cameraView.getSize().width, cameraView.getSize().height, Image.SCALE_SMOOTH)));
            camerabtnon.setSelected(true);
        }
        else {
            cameraView.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/resources/media/simulator/nosignal.png")).getImage().getScaledInstance(cameraView.getSize().width, cameraView.getSize().height, Image.SCALE_SMOOTH)));
            camerabtnoff.setSelected(true);
        }
    }
    
    public void handleClose() {
        changeUI.interrupt();
        stopit = false;
        this.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CameraView(null, null, false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup cameraOn;
    public javax.swing.JLabel cameraView;
    public javax.swing.JLabel cameraViewNum;
    private javax.swing.JRadioButton camerabtnoff;
    private javax.swing.JRadioButton camerabtnon;
    private javax.swing.JLabel dateTime;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
