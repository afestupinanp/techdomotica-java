/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package techdomotica.java.forms.gestorusuarios;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import techdomotica.objs.Ambiente;
import techdomotica.objs.Conectar;
import techdomotica.objs.Reporte;

/**
 *
 * @author Andres
 */
public class PerfilCreation extends javax.swing.JDialog {

    private Ambiente ambiente;
    private Conectar conx = null;
    private int admID = 0;
    
    public PerfilCreation(java.awt.Frame parent, boolean modal, Ambiente amb) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/resources/media/L4.png")).getImage());
        
        ambiente = amb;
        conx = amb.getConnection();
        admID = Integer.parseInt(amb.getAdminEncargado().getID());
        
        loadAvailableFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboAire1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        tempaire1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboAire2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        tempaire2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        comboProyector = new javax.swing.JComboBox<>();
        comboSensor1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        comboSensor2 = new javax.swing.JComboBox<>();
        addDefault = new javax.swing.JButton();
        justAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear perfil - Tech Domótica");
        setResizable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Agregar un nuevo perfil");

        jLabel4.setText("<html>Explicación: Un perfil son los valores por defecto que adquieren los dispositivos al iniciar sesión. Estos valores pueden modificarse a tu gusto, a no ser que el perfil sea sobreescrito por un evento, en cuyo caso, se activará el perfil seleccionado del evento.<br/>No puedes modificar las cámaras con los perfiles.</html>");

        jLabel7.setText("Aire acondicionado 1:");

        comboAire1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));

        jLabel5.setText("Temperatura: ");

        tempaire1.setText("23");

        jLabel8.setText("Aire acondicionado 2:");

        comboAire2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));

        jLabel6.setText("Temperatura:");

        tempaire2.setText("23");

        jLabel11.setText("Proyector:");

        comboProyector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));

        comboSensor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));

        jLabel9.setText("Sensor de movimiento:");

        jLabel10.setText("Sensor de puerta:");

        comboSensor2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));

        addDefault.setText("Crear perfil y escoger como por defecto");
        addDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDefaultActionPerformed(evt);
            }
        });

        justAdd.setText("Crear perfil");
        justAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                justAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboSensor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboSensor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboProyector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboAire2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboAire1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tempaire1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(tempaire2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addDefault)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(justAdd)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboAire1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tempaire1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboAire2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempaire2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comboSensor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(comboProyector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(comboSensor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDefault)
                    .addComponent(justAdd))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDefaultActionPerformed
        createProfile(true);
    }//GEN-LAST:event_addDefaultActionPerformed

    private void justAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_justAddActionPerformed
        createProfile(false);
    }//GEN-LAST:event_justAddActionPerformed

    private void loadAvailableFields() {
        int amountDisabled = 0;
        javax.swing.JTextField fieldsAC[] = {tempaire1, tempaire2};
        javax.swing.JComboBox combo[][] = {{comboAire1, comboAire2}, {comboProyector}, {comboSensor1, comboSensor2}};
        techdomotica.objs.comps.ACondicionado arrayAC[] = ambiente.getACondicionadoAsArray();
        techdomotica.objs.comps.Sensor arraySensores[] = ambiente.getSensorAsArray();
        techdomotica.objs.comps.Televisor proyector = ambiente.getTelevisor();
        
        for(int i = 0, j = arrayAC.length ; i < j ; i++) {
            if(arrayAC[i] == null) {
                combo[0][i].setEnabled(false);
                combo[0][i].setToolTipText("Este aire acondicionado no está instalado.");
                fieldsAC[i].setEnabled(false);
                fieldsAC[i].setToolTipText("Este aire acondicionado no está instalado.");
                amountDisabled++;
            }
        }
        
        if(proyector == null) {
            combo[1][0].setEnabled(false);
            combo[1][0].setToolTipText("Este proyector no está instalado");
            amountDisabled++;
        }
        
        for(int i = 0, j = arraySensores.length ; i < j ; i++) {
            if(arraySensores[i] == null) {
                combo[2][i].setEnabled(false);
                combo[2][i].setToolTipText("Este sensor no está instalado.");
                amountDisabled++;
            }
        }
        System.out.println("amountdisabled: " + amountDisabled);
        if(amountDisabled == 5) {
            addDefault.setEnabled(false);
            justAdd.setEnabled(false);
            addDefault.setToolTipText("No se puede guardar un perfi: no hay dispositivos que configurar");
            justAdd.setToolTipText("No se puede guardar un perfi: no hay dispositivos que configurar");
        }
    }
    
    private void createProfile(boolean saveAsDefault) {
        String profileResumen = String.format("Temperatura (aire 1): %d°C.\nTemperatura (aire 2): %d°C.\nEstado del aire acondicionado 1: %s.\nEstado del aire acondicionado 2: %s.\nEstado del proyector: %s.\nEstado del sensor de movimiento: %s.\nEstado del sensor de puerta: %s.\n", Integer.parseInt(tempaire1.getText()), Integer.parseInt(tempaire2.getText()), comboAire1.getSelectedItem(), comboAire2.getSelectedItem(), comboProyector.getSelectedItem(), comboSensor1.getSelectedItem(), comboSensor2.getSelectedItem());
        int conf = JOptionPane.showConfirmDialog(null, "Confirma los siguientes datos:\n" + profileResumen + "\n\n¿Estás seguro de guardar este perfil?", "Confirmación de datos", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(conf == JOptionPane.YES_OPTION) {
            int saveDefault = (saveAsDefault) ? 2 : 1;
            if(saveAsDefault) disableAllDefaults();
            int result = conx.execute(String.format("INSERT INTO perfil VALUES (null, %d, %d, %d, %d, %d, %d, %d, %d, %d);", admID, Integer.parseInt(tempaire1.getText()), Integer.parseInt(tempaire2.getText()), comboAire1.getSelectedIndex(), comboAire2.getSelectedIndex(), comboProyector.getSelectedIndex(), comboSensor1.getSelectedIndex(), comboSensor2.getSelectedIndex(), saveDefault ));
            if(result == 1) {
                JOptionPane.showMessageDialog(null, "Se ha guardado el perfil correctamente." + ( (saveAsDefault) ? "\nSe ha establecido este perfil como tu perfil por defecto." : "" ), "Perfil guardado", JOptionPane.INFORMATION_MESSAGE);
                Reporte.insertReport(admID, 12, "Este usuario creó un nuevo perfil.");
                this.dispose();
            }
            else JOptionPane.showMessageDialog(null, "Ha ocurrido un problema durante el guardado del perfil. Intentalo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private int disableAllDefaults() {
        return conx.execute("UPDATE perfil SET habilitado = 1 WHERE habilitado = 2 AND id_usuario = " + admID + ";");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PerfilCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PerfilCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PerfilCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PerfilCreation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PerfilCreation dialog = new PerfilCreation(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDefault;
    private javax.swing.JComboBox<String> comboAire1;
    private javax.swing.JComboBox<String> comboAire2;
    private javax.swing.JComboBox<String> comboProyector;
    private javax.swing.JComboBox<String> comboSensor1;
    private javax.swing.JComboBox<String> comboSensor2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton justAdd;
    private javax.swing.JTextField tempaire1;
    private javax.swing.JTextField tempaire2;
    // End of variables declaration//GEN-END:variables
}
